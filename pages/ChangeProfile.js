import Head from "next/head";
import styles from "@/styles/Home.module.css";
import Tabbar from "@/components/Tabbar";
import Navbar from "@/components/Navbar";
import Image from "next/image";
import { useState, useEffect } from "react";

export default function ChangeProfile() {
    const [selectedAvatar, setSelectedAvatar] = useState(null);
    const [selectedFrame, setSelectedFrame] = useState(null);
    const [showAvatars, setShowAvatars] = useState(true); 
    const [showPopup, setShowPopup] = useState(false);

    const avatars = [
        { id: 1, imageUrl: '/images/avatars/seed.svg' },
        { id: 2, imageUrl: '/images/avatars/sprout.svg' },
        { id: 3, imageUrl: '/images/avatars/sunflower.svg' },
        { id: 4, imageUrl: '/images/avatars/crown.svg' },
        { id: 5, imageUrl: '/images/avatars/clover.svg' },
        { id: 6, imageUrl: '/images/avatars/glasses.svg' },
        { id: 7, imageUrl: '/images/avatars/asl-love.svg' },
        { id: 8, imageUrl: '/images/avatars/star.svg' },
        { id: 9, imageUrl: '/images/avatars/tulip.svg' }
    ];

    const frames = [
        { id: 1, imageUrl: '/images/frames/redframe.svg' },
        { id: 2, imageUrl: '/images/frames/yellowframe.svg' },
        { id: 3, imageUrl: '/images/frames/greenframe.svg' },
        { id: 4, imageUrl: '/images/frames/blueframe.svg' },
        { id: 5, imageUrl: '/images/frames/purpleframe.svg' },
        { id: 6, imageUrl: '/images/frames/brownframe.svg' }
    ];

    const handleAvatarSelect = (avatar) => {
        setSelectedAvatar(avatar);
    };
        
    const handleFrameSelect = (frame) => {
        setSelectedFrame(frame);
    };
    
    const handleSave = () => {
        setShowPopup(true);
        setTimeout(() => setShowPopup(false), 3000);
    };

    const handleClosePopup = () => {
        setShowPopup(false);
    };

   
    useEffect(() => {
        const handleClickOutside = () => {
            if (showPopup) {
                setShowPopup(false);
            }
        };

        if (showPopup) {
            document.addEventListener("click", handleClickOutside);
        } else {
            document.removeEventListener("click", handleClickOutside);
        }

        return () => {
            document.removeEventListener("click", handleClickOutside);
        };
    }, [showPopup]);

    return (
        <>
            <Head>
                <title>CalmQuest</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <div className={styles.mainContainer}>
                    <Navbar />
                    <div className={styles.customizeContainer}>
                        <div className={styles.currentImage}>
                            {selectedAvatar && selectedFrame && (
                                <div className={styles.imageWithFrame}>
                                    <Image
                                        src={selectedFrame.imageUrl}
                                        alt={`Selected Frame`}
                                        width={112}
                                        height={112}
                                        className={styles.frame}
                                    />
                                    <Image
                                        src={selectedAvatar.imageUrl}
                                        alt={`Selected Avatar`}
                                        width={112}
                                        height={112}
                                        className={styles.avatar}
                                    />
                                </div>
                            )}
                        </div>
                        <div className={styles.customizeButtons}>
                            <button onClick={() => setShowAvatars(true)} style={{ marginRight: '10px', fontWeight: showAvatars ? 'bold' : 'normal' }}>Avatars</button>
                            <button onClick={() => setShowAvatars(false)} style={{ fontWeight: !showAvatars ? 'bold' : 'normal' }}>Frames</button>
                        </div>
                        <div className={styles.imageGrid}>
                            {showAvatars ? (
                                avatars.map((avatar) => (
                                    <div
                                        key={avatar.id}
                                        onClick={() => handleAvatarSelect(avatar)}
                                        className={`${styles.imageItem} ${selectedAvatar === avatar ? styles.customizeSelected : ''}`}
                                    >
                                        <Image
                                            src={avatar.imageUrl}
                                            alt={`Avatar ${avatar.id}`}
                                            width={112}
                                            height={112}
                                        />
                                    </div>
                                ))
                            ) : (
                                frames.map((frame) => (
                                    <div
                                        key={frame.id}
                                        onClick={() => handleFrameSelect(frame)}
                                        className={`${styles.imageItem} ${selectedFrame === frame ? styles.customizeSelected : ''}`}
                                    >
                                        <Image
                                            src={frame.imageUrl}
                                            alt={`Frame ${frame.id}`}
                                            width={112}
                                            height={112}
                                        />
                                    </div>
                                ))
                            )}
                        </div>
                    </div>
                    {(selectedAvatar || selectedFrame) && (
                        <div className={styles.customizeButtons}>
                            <button onClick={handleSave}>Save</button>
                        </div>
                    )}
                    {showPopup && (
                        <div className={styles.popup}>
                            <div className={styles.popupContent}>
                                <p>Change Successful!</p>
                                <button onClick={handleClosePopup}>Close</button>
                            </div>
                        </div>
                    )}
                    <Tabbar />
                </div>
            </main>
        </>
    );
}
